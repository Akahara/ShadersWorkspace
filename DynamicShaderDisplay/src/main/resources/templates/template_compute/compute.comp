#version 430 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

#include "dsd_debug.glsl"

struct indirectdraw_t {
  uint count;
  uint instanceCount;
  uint firstIndex;
  uint baseVertex;
  uint baseInstance;
};

indirectdraw_t make_indirectdraw_t() {
  indirectdraw_t t;
  t.count = 0;
  t.instanceCount = 1;
  t.firstIndex = 0;
  t.baseVertex = 0;
  t.baseInstance = 0;
  return t;
}

struct vertex_t {
  vec3 i_pos;
};

layout(std430, binding = 0) buffer indirect_draw_buffer {
  indirectdraw_t indirectDraws[];
};

layout(std430, binding = 1) buffer vertex_buffer
{
  vertex_t vertices[];
};

void main()
{
  DSD_DEBUG_INIT();

  indirectdraw_t draw = make_indirectdraw_t();
  draw.count = 3;
  indirectDraws[0] = draw;
  vertices[0].i_pos = vec3(.6, -.5, 0);
  vertices[1].i_pos = vec3(-.6, -.5, 0);
  vertices[2].i_pos = vec3(0, .75, 0);
}